type Error = variant {
  FieldEmpty : record { msg : text };
  Sold : record { msg : text };
  NotFound : record { msg : text };
  UserNotRegistered : record { msg : text };
  Unauthorized : record { msg : text };
  UserExists : record { msg : text };
};
type NewUser = record { username : text; role : UserRole; email : text };
type Result = variant { Ok : User; Err : Error };
type User = record {
  id : nat64;
  username : text;
  role : UserRole;
  email : text;
  principal_id : principal;
};
type UserRole = variant { Empty; Buyer; Seller };
service : {
  display_instructions_consumed : () -> (nat64) query;
  register_user : (NewUser) -> (Result);
}
